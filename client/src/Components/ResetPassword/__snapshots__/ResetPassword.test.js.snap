// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResetPassword component tests matches SnapShot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ForgotPassword />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          Reset Password
</h1>,
        <h5>
          Passwords must be at least 6 characters long.
</h5>,
        <label>
          Password: 
</label>,
        <input
          name="password"
          onChange={[Function]}
          placeholder="Password"
          type="text"
          value=""
/>,
        <label>
          Confirm Password: 
</label>,
        <div
          className="confirmWrapper"
>
          <input
                    name="confirmPass"
                    onChange={[Function]}
                    placeholder="Confirm Password"
                    type="password"
                    value=""
          />
          <span />
</div>,
        <button
          disabled={true}
>
          Change Password
</button>,
      ],
      "className": "ForgotPassword",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Reset Password",
        },
        "ref": null,
        "rendered": "Reset Password",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Passwords must be at least 6 characters long.",
        },
        "ref": null,
        "rendered": "Passwords must be at least 6 characters long.",
        "type": "h5",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Password: ",
        },
        "ref": null,
        "rendered": "Password: ",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "name": "password",
          "onChange": [Function],
          "placeholder": "Password",
          "type": "text",
          "value": "",
        },
        "ref": [Function],
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Confirm Password: ",
        },
        "ref": null,
        "rendered": "Confirm Password: ",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              name="confirmPass"
              onChange={[Function]}
              placeholder="Confirm Password"
              type="password"
              value=""
/>,
            <span />,
          ],
          "className": "confirmWrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "confirmPass",
              "onChange": [Function],
              "placeholder": "Confirm Password",
              "type": "password",
              "value": "",
            },
            "ref": [Function],
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Change Password",
          "disabled": true,
        },
        "ref": null,
        "rendered": "Change Password",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Reset Password
</h1>,
          <h5>
            Passwords must be at least 6 characters long.
</h5>,
          <label>
            Password: 
</label>,
          <input
            name="password"
            onChange={[Function]}
            placeholder="Password"
            type="text"
            value=""
/>,
          <label>
            Confirm Password: 
</label>,
          <div
            className="confirmWrapper"
>
            <input
                        name="confirmPass"
                        onChange={[Function]}
                        placeholder="Confirm Password"
                        type="password"
                        value=""
            />
            <span />
</div>,
          <button
            disabled={true}
>
            Change Password
</button>,
        ],
        "className": "ForgotPassword",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Reset Password",
          },
          "ref": null,
          "rendered": "Reset Password",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Passwords must be at least 6 characters long.",
          },
          "ref": null,
          "rendered": "Passwords must be at least 6 characters long.",
          "type": "h5",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Password: ",
          },
          "ref": null,
          "rendered": "Password: ",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "password",
            "onChange": [Function],
            "placeholder": "Password",
            "type": "text",
            "value": "",
          },
          "ref": [Function],
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Confirm Password: ",
          },
          "ref": null,
          "rendered": "Confirm Password: ",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                name="confirmPass"
                onChange={[Function]}
                placeholder="Confirm Password"
                type="password"
                value=""
/>,
              <span />,
            ],
            "className": "confirmWrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "confirmPass",
                "onChange": [Function],
                "placeholder": "Confirm Password",
                "type": "password",
                "value": "",
              },
              "ref": [Function],
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
              },
              "ref": null,
              "rendered": null,
              "type": "span",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Change Password",
            "disabled": true,
          },
          "ref": null,
          "rendered": "Change Password",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
